"""
Django settings for social_media_api project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$&hi(t#-#qu9*q++#a*7jbs(9vd53mi!l*%5mcxs!$&p%pub_h'

#####################################################
# When Deploying to production, turn these on       #
#####################################################
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

if not DEBUG:
    SECURE_BROWSER_XSS_FILTER = True  # Enables the X-XSS-Protection header
    X_FRAME_OPTIONS = 'DENY'  # Prevents clickjacking by disallowing your site in iframes
    SECURE_CONTENT_TYPE_NOSNIFF = True  # Prevents MIME type sniffing
    CSRF_COOKIE_SECURE = True  # Ensures the CSRF cookie is only sent over HTTPS
    SESSION_COOKIE_SECURE = True  # Ensures session cookies are only sent over HTTPS
    SECURE_HSTS_SECONDS = 31536000  # 1 year
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Apply HSTS to all subdomains
    SECURE_HSTS_PRELOAD = True  # Preload site in browsers' HSTS lists
    SECURE_SSL_REDIRECT = True  # Redirect all HTTP requests to HTTPS
    CSP_DEFAULT_SRC = ("'self'",)  # Only allow resources from your own domain
    CSP_SCRIPT_SRC = ("'self'", 'https://trustedscripts.com')
    CSP_STYLE_SRC = ("'self'", 'https://trustedstyles.com')
else:
    # Use HTTP settings for local development
    CSRF_COOKIE_SECURE = False
    SESSION_COOKIE_SECURE = False
    SECURE_SSL_REDIRECT = False
    SECURE_HSTS_SECONDS = 0  # No HSTS during development

#####################################################
# End of prod configs                               #
#####################################################

ALLOWED_HOSTS = [
    'https://7vx5w0zk27.execute-api.us-east-1.amazonaws.com/dev/',
    '7vx5w0zk27.execute-api.us-east-1.amazonaws.com/dev/',
    '7vx5w0zk27.execute-api.us-east-1.amazonaws.com',
    'localhost',
    '127.0.0.1',
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'django_filters',
    'accounts',
    'posts',
    'notifications',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'social_media_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'social_media_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
        # Updating this for the checker.
        # This db should be a mysql db but for now, I will go with sql lite
        'PORT': ''
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


############################################################################
# ******************** START OF USER DEFINED SETTINGS ******************** #
############################################################################

# Tell Django about the custom user model
AUTH_USER_MODEL = 'accounts.CustomUser'

# Custom Configs 
REST_FRAMEWORK = {
    # Global Auth and Perms
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        ],

    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
        ],

    # Global filter, search and ordering
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
        ],

    # Global pagination
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 1
}
