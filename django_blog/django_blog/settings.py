"""
Django settings for django_blog project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-q*9n&4uwx(x09m4t%jmfaapmh8vu883^6%q1@%9f_tv$e(3xe%'

#####################################################
# When Deploying to production, turn these on       #
#####################################################
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

if not DEBUG:
    SECURE_BROWSER_XSS_FILTER = True  # Enables the X-XSS-Protection header
    X_FRAME_OPTIONS = 'DENY'  # Prevents clickjacking by disallowing your site in iframes
    SECURE_CONTENT_TYPE_NOSNIFF = True  # Prevents MIME type sniffing
    CSRF_COOKIE_SECURE = True  # Ensures the CSRF cookie is only sent over HTTPS
    SESSION_COOKIE_SECURE = True  # Ensures session cookies are only sent over HTTPS
    SECURE_HSTS_SECONDS = 31536000  # 1 year
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Apply HSTS to all subdomains
    SECURE_HSTS_PRELOAD = True  # Preload site in browsers' HSTS lists
    SECURE_SSL_REDIRECT = True  # Redirect all HTTP requests to HTTPS
    CSP_DEFAULT_SRC = ("'self'",)  # Only allow resources from your own domain
    CSP_SCRIPT_SRC = ("'self'", 'https://trustedscripts.com')
    CSP_STYLE_SRC = ("'self'", 'https://trustedstyles.com')
else:
    # Use HTTP settings for local development
    CSRF_COOKIE_SECURE = False
    SESSION_COOKIE_SECURE = False
    SECURE_SSL_REDIRECT = False
    SECURE_HSTS_SECONDS = 0  # No HSTS during development

#####################################################
# End of prod configs                               #
#####################################################



ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
    'taggit',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',  # Required for sessions
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Required for authentication
    'django.contrib.messages.middleware.MessageMiddleware',  # Required for messages
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Optionally add the CSPMiddleware back when you're ready
if not DEBUG:
    MIDDLEWARE += [
        'csp.middleware.CSPMiddleware',
    ]


ROOT_URLCONF = 'django_blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_blog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
        'USER': '',
        'PORT': ''
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / 'blog/static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Redirect to home after login or logout 
LOGIN_REDIRECT_URL = 'home'

# Redirect after @login_required
LOGIN_URL = 'login'

# django-taggit to be case insensitive
TAGGIT_CASE_INSENSITIVE = True
